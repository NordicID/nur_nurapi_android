apply plugin: 'com.android.library'

android {
    compileSdkVersion 31
    defaultConfig {
        def nurapiVersionCode = 40
        def nurapiVersion = "2.0.21"

        minSdkVersion 21
        targetSdkVersion 31
        versionCode nurapiVersionCode
        versionName nurapiVersion
        buildConfigField "String", "NURVERSION", "\"$nurapiVersion\""
        buildConfigField "int", "NURVERSIONCODE", "$nurapiVersionCode"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    /* buildToolsVersion '26.0.2' */
    buildToolsVersion '28.0.3'

    /* Always remove NurApi.jar when doing clean build. Will downloaded in preBuild step */
    clean  {
        def f = new File('NurApiAndroid/libs/NurApi.jar')
        if (f.exists()) {
            println 'Deleted NurApi.jar'
            f.delete();
        }
    }

    /* Download NurApi.jar if missing */
    preBuild  {
        def f = new File('NurApiAndroid/libs/NurApi.jar')
        if (!f.exists()) {
            println 'Downloading latest NurApi.jar'
            new URL('https://github.com/NordicID/nur_sdk/raw/master/java/NurApi.jar').withInputStream{ i -> f.withOutputStream{ it << i }}
            println 'Done'
        }
    }

    android.libraryVariants.all { variant ->
        variant.outputs.all {
            if ("${variant.name}" == "debug")
                outputFileName = "NurApiAndroid_${variant.name}.aar"
            else
                outputFileName = "NurApiAndroid.aar"
        }
    }

    android.libraryVariants.all { variant ->
        variant.getAssembleProvider().configure() {
            it.doLast {
                if ("${variant.name}" == "release") {
                    copy {
                        from('build/outputs/aar') {
                            include 'NurApiAndroid.aar'
                        }
                        into '../prebuilt'
                    }
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'no.nordicsemi.android.support.v18:scanner:1.4.3'
}
